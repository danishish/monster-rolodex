{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAIaA,EAAO,SAAAC,GAAK,OAEzB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHLC,G,MAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAW,YAAhB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCNlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAW,SACXa,KAAK,SACLF,YAAaA,EACbG,SAAWF,MCkCAG,G,wDAlCb,aAAgB,IAAD,8BACb,gBAcFH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IALD,E,qDASf,WAAqB,IAAD,OACtBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAMtC,WAAU,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAEpG,OACE,sBAAKhC,UAAU,MAAf,UACA,iDACE,cAAC,EAAD,CACEW,YAAY,yBACZC,aAAgBe,KAAKf,eACvB,cAAC,EAAD,CAAUJ,SAAWoB,W,GA7BVK,cCIJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc3d895c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props => (\n\n<div className = 'card-container'>\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n<h1>{props.monster.name}</h1>\n<p>{props.monster.email}</p>\n\n </div>\n);","import React from 'react';\n\nimport {Card } from './card/card.component';\n\nimport './card-list.styles.css'\n\nexport const CardList = props => (\n\n    <div className= 'card-list'>\n        {props.monsters.map(monster =>\n           (<Card key={monster.id} monster= {monster}/> \n        ))}       \n    </div>\n        \n);","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input\n    className ='search'\n    type='search' \n    placeholder={placeholder}\n    onChange={ handleChange }/>\n\n)","import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\n\nimport {SearchBox, searchBox} from './components/card-list/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends  Component {\n  constructor () {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField:''\n    };\n  }\n\n  componentDidMount() {\nfetch('https://jsonplaceholder.typicode.com/users')\n.then(response => response.json())\n.then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = e => \n  {this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n        <SearchBox \n          placeholder='Search Freaky Monsters'\n          handleChange = {this.handleChange}/>\n        <CardList monsters= {filteredMonsters}/>\n     </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}